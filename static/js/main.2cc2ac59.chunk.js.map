{"version":3,"sources":["components/EditableList/index.tsx","views/DoctorListPage/DoctorData.tsx","views/DoctorListPage/index.tsx","views/DoctorListPage/doctors.csv","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EditableList","props","district","handleFilter","Autocomplete","multiple","options","onChange","groupBy","option","region","getOptionLabel","location","renderInput","params","TextField","variant","label","useStyles","makeStyles","name","marginTop","address","fontSize","color","text","chip","marginRight","marginBottom","time","DoctorData","cvsData","classes","data","service_type","split","price","Price","medicine","Medicine","day_seq_1","RegExp","day_seq_1_time","day_seq_2","day_seq_2_time","day_seq_3","day_seq_3_time","day_seq_4","day_seq_4_time","weekdays","getloop1","indexOf","trim","getloop2","getloop3","getloop4","Fragment","Divider","Typography","gutterBottom","className","Name","length","map","item","index","Chip","Address1","Address2","Telephone1","i","slice","theme","container","padding","breakpoints","down","filter","pagination","DoctorListPage","useState","showData","setShowData","pageData","setPageData","setDistrict","page","setPage","useEffect","csv","csvFilePath","then","districtlist","some","el","Region","toLowerCase","Location","push","districtData","sort","a","b","event","value","csitem","includes","Grid","md","sm","xs","spacing","justifyContent","Pagination","count","Math","floor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cc2ac59.chunk.js","sourcesContent":["//Material-UI\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n//Interface\nimport { FilterKey } from \"../../types/interfaces\";\n\ninterface Props {\n  district: FilterKey[];\n  handleFilter: (event: object, value: FilterKey[]) => void;\n}\nfunction EditableList(props: Props) {\n  const { district, handleFilter } = props;\n\n  return (\n    <Autocomplete\n      multiple\n      options={district}\n      onChange={handleFilter}\n      groupBy={(option) => option.region}\n      getOptionLabel={(option) => option.location}\n      renderInput={(params) => (\n        <TextField {...params} variant=\"outlined\" label=\"District\" />\n      )}\n    />\n  );\n}\nexport default EditableList;\n","import React from \"react\";\n//Material-UI\nimport { Divider, Typography, makeStyles, Chip } from \"@material-ui/core\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n//Interface\nimport { Doctor } from \"../../types/interfaces\";\n\nconst useStyles = makeStyles(() => ({\n  name: {\n    marginTop: \"0.35em\",\n  },\n  address: {\n    fontSize: \"1rem\",\n    color: \"red\",\n  },\n  text: {\n    color: \"#707188\",\n  },\n  chip: {\n    marginRight: \"5px\",\n    marginBottom: \"5px\",\n  },\n  time: {\n    color: \"#707188\",\n    marginTop: \"0.35em\",\n  },\n}));\ninterface Props {\n  data: Doctor;\n}\n\nfunction DoctorData(props: Props) {\n  const classes = useStyles();\n  const { data } = props;\n  let service_type = data?.[\"Service Type\"].split(\"/\");\n  let price = data?.Price.split(\",\");\n  let medicine = data?.Medicine.split(\",\");\n  let day_seq_1 = data?.[\"Day Seq 1\"].split(new RegExp(\"[,/&]\", \"g\"));\n  let day_seq_1_time = data?.[\"Day Seq 1 time\"];\n  let day_seq_2 = data?.[\"Day Seq 2\"].split(new RegExp(\"[,/&]\", \"g\"));\n  let day_seq_2_time = data?.[\"Day Seq 2 time\"];\n  let day_seq_3 = data?.[\"Day Seq 3\"].split(new RegExp(\"[,/&]\", \"g\"));\n  let day_seq_3_time = data?.[\"Day Seq 3 time\"];\n  let day_seq_4 = data?.[\"Day Seq 4\"].split(new RegExp(\"[,/&]\", \"g\"));\n  let day_seq_4_time = data?.[\"Day Seq 4 time\"];\n  let weekdays = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  let getloop1 =\n    data?.[\"Day Seq 1\"].indexOf(\"-\") > 0\n      ? weekdays.indexOf(data?.[\"Day Seq 1\"].split(\"-\")[1]?.trim()) + 1\n      : 0;\n  let getloop2 =\n    data?.[\"Day Seq 2\"].indexOf(\"-\") > 0\n      ? weekdays.indexOf(data?.[\"Day Seq 2\"].split(\"-\")[1]?.trim()) + 1\n      : 0;\n  let getloop3 =\n    data?.[\"Day Seq 3\"].indexOf(\"-\") > 0\n      ? weekdays.indexOf(data?.[\"Day Seq 3\"].split(\"-\")[1]?.trim()) + 1\n      : 0;\n  let getloop4 =\n    data?.[\"Day Seq 4\"].indexOf(\"-\") > 0\n      ? weekdays.indexOf(data?.[\"Day Seq 4\"].split(\"-\")[1]?.trim()) + 1\n      : 0;\n  return (\n    <React.Fragment>\n      <Divider />\n\n      <Typography variant=\"h6\" gutterBottom className={classes.name}>\n        {data?.Name}\n      </Typography>\n\n      {service_type.length > 0 &&\n        service_type.map((item, index) => (\n          <Chip\n            label={item}\n            variant=\"outlined\"\n            className={classes.chip}\n            key={index}\n          />\n        ))}\n\n      <Typography gutterBottom>\n        <LocationOnIcon className={classes.address} />\n        {data?.Address1 + \",\" + data?.Address2}\n      </Typography>\n\n      <Typography variant=\"body2\" gutterBottom className={classes.text}>\n        {data?.Telephone1}\n      </Typography>\n\n      <Typography variant=\"body2\" gutterBottom className={classes.text}>\n        Member exclusive price:\n      </Typography>\n\n      {service_type.length > 0 &&\n        service_type.map((item, i) => (\n          <Typography variant=\"body2\" className={classes.text}>\n            {item}: ${price[i]}\n            {!medicine[i] || medicine[i] === \"NA\"\n              ? \"(not inclusive medicine)\"\n              : \"(inclusive \" + medicine[i] + \" Days of \" + item + \" medicine)\"}\n          </Typography>\n        ))}\n\n      <Typography variant=\"body2\" gutterBottom className={classes.time}>\n        {getloop1 > 0\n          ? weekdays\n              .slice(0, getloop1)\n              .map(\n                (item, i) => (i > 0 ? \", \" : \"\") + item + \": \" + day_seq_1_time\n              )\n          : day_seq_1.map(\n              (item, i) => (i > 0 ? \", \" : \"\") + item + \": \" + day_seq_1_time\n            )}\n        {getloop2 > 0\n          ? weekdays\n              .slice(0, getloop2)\n              .map((item) => \", \" + item + \": \" + day_seq_2_time)\n          : day_seq_2_time\n          ? day_seq_2?.map((item) => \", \" + item + \": \" + day_seq_2_time)\n          : \"\"}\n        {getloop3 > 0\n          ? weekdays\n              .slice(0, getloop3)\n              .map((item) => \", \" + item + \": \" + day_seq_3_time)\n          : day_seq_3_time\n          ? day_seq_3?.map((item) => \", \" + item + \": \" + day_seq_3_time)\n          : \"\"}\n        {getloop4 > 0\n          ? weekdays\n              .slice(0, getloop4)\n              .map((item) => \", \" + item + \": \" + day_seq_4_time)\n          : day_seq_4_time\n          ? day_seq_4?.map((item) => \", \" + item + \": \" + day_seq_4_time)\n          : \"\"}\n      </Typography>\n    </React.Fragment>\n  );\n}\nexport default DoctorData;\n","import React, { useEffect, useState } from \"react\";\n//Material-UI\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n//CSV\nimport { csv, DSVRowArray } from \"d3\";\n//OtherComponents\nimport EditableList from \"../../components/EditableList\";\nimport DoctorData from \"./DoctorData\";\n//Interface\nimport { Doctor, FilterKey } from \"../../types/interfaces\";\n// @ts-ignore\nimport csvFilePath from \"./doctors.csv\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: \"50px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"10px\",\n    },\n  },\n  filter: {\n    marginBottom: \"30px\",\n  },\n  pagination: {\n    marginTop: \"30px\",\n  },\n}));\n\nlet cvsData: DSVRowArray<string>;\nfunction DoctorListPage() {\n  const classes = useStyles();\n  const [showData, setShowData] = useState<DSVRowArray<string>>();\n  const [pageData, setPageData] = useState<any>([]);\n  const [district, setDistrict] = useState<FilterKey[]>([]);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    // Read file\n    csv(csvFilePath).then((data) => {\n      cvsData = data;\n      setShowData(data);\n      setPageData(data?.slice(0, 10));\n      // Create data for filter district\n      let region: any = [];\n      let districtlist: FilterKey[] = [];\n      for (let i = 0; i < data.length; i++) {\n        const found: boolean = districtlist.some((el: FilterKey) =>\n          el.region === \"New Terriroties\"\n            ? \"New Territories\"\n            : data[i].Region &&\n              el.location.toLowerCase() ===\n                data[i].Location!.trim().toLowerCase()\n        );\n        if (!found) {\n          region.push(data[i].Region);\n          let districtData: FilterKey = {\n            region:\n              data[i].Region === \"New Terriroties\"\n                ? \"New Territories\"\n                : (data[i].Region as string),\n            location: data[i].Location!.trim(),\n          };\n          districtlist.push(districtData);\n        }\n      }\n      districtlist.sort((a: FilterKey, b: FilterKey) =>\n        a.region > b.region ? 1 : -1\n      );\n      setDistrict(districtlist);\n    });\n  }, []);\n\n  const handleChangePage = (event: object, value: number) => {\n    setPage(value);\n    setPageData(showData?.slice((value - 1) * 10, (value - 1) * 10 + 10));\n  };\n\n  const handleFilter = async (event: object, value: FilterKey[]) => {\n    let data: any;\n    if (value && value?.length > 0) {\n      data = await cvsData?.filter((csitem: any) =>\n        value.map((item: FilterKey) => item.location).includes(csitem.Location)\n      );\n    } else {\n      data = cvsData;\n    }\n    setPage(1);\n    setShowData(data);\n    setPageData(data?.slice(0, 10));\n  };\n\n  return (\n    <React.Fragment>\n      <Grid className={classes.container}>\n        <Grid item md={4} sm={12} xs={12} className={classes.filter}>\n          <EditableList district={district} handleFilter={handleFilter} />\n        </Grid>\n\n        <Grid container spacing={4}>\n          {pageData.length > 0 &&\n            pageData.map((data: Doctor, index: number) => (\n              <Grid item key={index} md={6} sm={12} xs={12}>\n                <DoctorData data={data} />\n              </Grid>\n            ))}\n        </Grid>\n\n        <Grid container justifyContent=\"center\" className={classes.pagination}>\n          <Pagination\n            count={\n              showData\n                ? showData?.length % 10 !== 0\n                  ? Math.floor(showData?.length / 10) + 1\n                  : showData?.length / 10\n                : 0\n            }\n            page={page}\n            onChange={handleChangePage}\n            color=\"primary\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\nexport default DoctorListPage;\n","export default __webpack_public_path__ + \"static/media/doctors.aec49c89.csv\";","import React from 'react';\nimport './App.css';\n// Pages\nimport DoctorListPage from './views/DoctorListPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DoctorListPage />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}